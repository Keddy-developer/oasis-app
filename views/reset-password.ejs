<%- include('partials/header'); -%>
<link href="/fonts/remixicon.css" rel="stylesheet">

<!-- Reset Password Form -->
<form class="credential-form-container" id="resetForm">
    <h2>Reset Password</h2>
    <p>Please enter your new password.</p>
    
    <label for="password">New Password</label>
    <div class="password-container">
        <input type="password" id="password" name="password" required />
        <button type="button" id="togglePassword" class="toggle-password">
            <i class="ri-eye-off-line"></i>
        </button>
    </div>
    <div class="password error"></div>

    <label for="confirmPassword">Confirm New Password</label>
    <div class="password-container">
        <input type="password" id="confirmPassword" name="confirmPassword" required />
        <button type="button" id="toggleConfirmPassword" class="toggle-password">
            <i class="ri-eye-off-line"></i>
        </button>
    </div>
    <div class="confirm-password error"></div>

    <div class="credential-btns">
        <button type="submit" class="submit-btn">Reset Password</button>
        <a href="/"><h5>Cancel</h5></a>
    </div>
</form>

<script>
    const resetForm = document.getElementById('resetForm');
    const passwordError = document.querySelector('.password.error');
    const confirmPasswordError = document.querySelector('.confirm-password.error');
    const togglePassword = document.getElementById('togglePassword');
    const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');
    const passwordField = document.getElementById('password');
    const confirmPasswordField = document.getElementById('confirmPassword');

    // Toggle password visibility for new password field
    togglePassword.addEventListener('click', () => {
        const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordField.setAttribute('type', type);
        const icon = togglePassword.querySelector('i');
        icon.classList.toggle('ri-eye-line');
        icon.classList.toggle('ri-eye-off-line');
    });

    // Toggle password visibility for confirm password field
    toggleConfirmPassword.addEventListener('click', () => {
        const type = confirmPasswordField.getAttribute('type') === 'password' ? 'text' : 'password';
        confirmPasswordField.setAttribute('type', type);
        const icon = toggleConfirmPassword.querySelector('i');
        icon.classList.toggle('ri-eye-line');
        icon.classList.toggle('ri-eye-off-line');
    });

    resetForm.addEventListener('submit', async (e) => {
        e.preventDefault();

        // Reset previous error messages
        passwordError.textContent = '';
        confirmPasswordError.textContent = '';

        // Get the values using id attributes
        const password = passwordField.value;
        const confirmPassword = confirmPasswordField.value;
        const token = window.location.pathname.split('/').pop(); // Extract token from URL

        // Validate password confirmation
        if (password !== confirmPassword) {
            confirmPasswordError.textContent = 'Passwords do not match';
            return;
        }

        try {
            console.log('Sending password reset request...'); // Log before sending the request
            const res = await fetch(`/resetPassword/${token}`, {
                method: 'PATCH',
                body: JSON.stringify({ password, confirmPassword }), // Ensure keys match what your server expects
                headers: { 'Content-Type': 'application/json' }
            });

            console.log('Response status:', res.status); // Log response status
            const data = await res.json();
            console.log('Response data:', data); // Log response data

            if (data.errors) {
                passwordError.textContent = data.errors.token || data.errors.server || 'An unexpected error occurred';
                console.error('Error details:', data.errors); // Log error details
            } else if (data.status === 'success') { // Fixed syntax error here
                alert('Your password has been reset successfully.');
                location.assign('/login');
            } 
        } catch (err) {
            console.error('Error:', err);
            passwordError.textContent = 'Failed to reset password. Please try again later.';
        }
    });
</script>

<%- include('partials/footer'); -%>
