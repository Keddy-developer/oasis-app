<%- include('partials/headerhome'); -%>
<link href="/fonts/remixicon.css" rel="stylesheet">

<section class="account-setting">
    <div class="account-setting-header"></div>
    <h1>Account Setting</h1>
    <form class="update-form-container" method="PATCH" action="/updatePassword" autocomplete="off">
        <h2>Edit & Update</h2>
        
        <label for="email">Email</label>
        <input type="email" id="email" name="email" required autocomplete="email"/>
        <div class="email-3 error"></div>

        <label for="current-password">Current Password</label>
        <div class="password-container">
            <input type="password" id="current-password" name="current-password" required autocomplete="current-password"/>
            <button type="button" id="toggleCurrentPassword" class="toggle-password">
                <i class="ri-eye-off-line"></i> 
            </button>
        </div>
        
        <div class="password-2 error"></div>

        <label for="new-password">New Password</label>
        <div class="password-container">
            <input type="password" id="newPassword" name="newPassword" required autocomplete="new-password"/>
            <button type="button" id="toggleNewPassword" class="toggle-password">
                <i class="ri-eye-off-line"></i> 
            </button>
        </div>

        <div class="confirm-1 error"></div>

        <label for="confirm-password">Confirm Password</label>
        <div class="password-container">
            <input type="password" id="confirmPassword" name="confirmPassword" required autocomplete="confirm-password"/>
            <button type="button" id="toggleConfirmPassword" class="toggle-password">
                <i class="ri-eye-off-line"></i> 
            </button>
        </div>
        
        
        
        
        <div class="update-buttons">
            <button type="submit" class="save-button">Save</button>
            <div class="cancel-button" ><a href="/dashboard">Cancel</a></div>
        </div>
        
    </form>
</section>

<script>
const form = document.querySelector('.update-form-container');
const emailError = document.querySelector('.email-3.error');
const passwordError = document.querySelector('.password-2.error');
const confirmPasswordError = document.querySelector('.confirm-1.error');
const toggleCurrentPassword = document.getElementById('toggleCurrentPassword');
const toggleNewPassword = document.getElementById('toggleNewPassword');
const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');
const currentPasswordField = document.getElementById('current-password');
const newPasswordField = document.getElementById('newPassword');
const confirmPasswordField = document.getElementById('confirmPassword');

// Toggle password visibility functions for all password fields
const togglePasswordVisibility = (toggleButton, passwordField) => {
    const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
    passwordField.setAttribute('type', type);
    const icon = toggleButton.querySelector('i');
    icon.classList.toggle('ri-eye-line');
    icon.classList.toggle('ri-eye-off-line');
};

toggleCurrentPassword.addEventListener('click', () => togglePasswordVisibility(toggleCurrentPassword, currentPasswordField));
toggleNewPassword.addEventListener('click', () => togglePasswordVisibility(toggleNewPassword, newPasswordField));
toggleConfirmPassword.addEventListener('click', () => togglePasswordVisibility(toggleConfirmPassword, confirmPasswordField));

form.addEventListener('submit', async (e) => {
    e.preventDefault();

    // Reset error messages
    emailError.textContent = '';
    passwordError.textContent = '';
    confirmPasswordError.textContent = '';

    // Get form values
    const email = form.querySelector('#email').value;
    const currentPassword = form.querySelector('#current-password').value;
    const newPassword = form.querySelector('#newPassword').value;
    const confirmPassword = form.querySelector('#confirmPassword').value;

    // Check if new password matches confirm password
    if (newPassword !== confirmPassword) {
        confirmPasswordError.textContent = 'Passwords do not match.';
        return; // Exit the function early if passwords do not match
    }

    try {
        // Make the fetch call to update password
        const res = await fetch('/updatePassword', {
            method: 'PATCH',
            body: JSON.stringify({ email, currentPassword, newPassword, confirmPassword }),
            headers: { 'Content-Type': 'application/json' }
        });

        const data = await res.json();
        console.log(data)

        if (!res.ok) {
            // Handle server-side validation errors
            if (data.errors) {
                if (data.errors.email) {
                    emailError.textContent = data.errors.email;
                }
                if (data.errors.password) {
                    passwordError.textContent = data.errors.password;
                }
            }
        } else {
            // If update is successful, redirect to the dashboard
            if (data.user) {
                location.assign('/dashboard');
            }
        }
    } catch (err) {
        console.error('Error:', err);
        passwordError.textContent = 'An error occurred while updating the password.';
    }
});
</script>

